MrBayes Code
C++:
for (k = 0; i < seq_length; k++)
{
	clP[h++] = (tiPL[AA] * clL[A] + tiPL[AC]*clL[C] + tiPL[AG]*clL[G] + tiPL[AT]*clL[T]) * (tiPR[AA]*clR[A] + tiPR[AC]*clR[C] + tiPR[AG] * clR[G] + tiPR[AT]*clR[T]);
	clP[h++] = (tiPL[CA] * clL[A] + tiPL[CC]*clL[C] + tiPL[CG]*clL[G] + tiPL[CT]*clL[T]) * (tiPR[CA]*clR[A] + tiPR[CC]*clR[C] + tiPR[CG] * clR[G] + tiPR[CT]*clR[T]);
	clP[h++] = (tiPL[GA] * clL[A] + tiPL[GC]*clL[C] + tiPL[GG]*clL[G] + tiPL[GT]*clL[T]) * (tiPR[GA]*clR[A] + tiPR[GC]*clR[C] + tiPR[GG] * clR[G] + tiPR[GT]*clR[T]);
	clP[h++] = (tiPL[TA] * clL[A] + tiPL[TC]*clL[C] + tiPL[TG]*clL[G] + tiPL[TT]*clL[T]) * (tiPR[TA]*clR[A] + tiPR[TC]*clR[C] + tiPR[TG] * clR[G] + tiPR[TT]*clR[T]);

	clL += 4;
	clR += 4;
	tiPL += 16;
	tiPR += 16;
}

MIPS:
assuming seq_length is stored in R1

k => R2
AA => R3, AC => R4, AG => R5 AT => R6
CA => R7, CC => R8, CG => R9, CT => R10
GA => R11, GC => R12, GG => R13, GT => R14
TA => R15, TC => R16, TG => R17, TT => R18,
A => R19, C => R20, G => R21, T => R22
h => R23
tiPL => RtiPL, tiPR => RtiPR, clL => RclL, clR => RclR, clP => RclP

		ADDI R2, R0, #0  // Initialize k to be 0
		ADDI R23, R0, R1 // Store stopping point in R23
LOOP:	L.S F1, 0(RtiPL) // Load tiPL[AA] into F1
		L.S F2, 0(RclL) // Load clL[A] into F2
		MUL.S F1, F1, F2 // Store tiPL[AA] * ClL[A] in F1

		L.S F2, 4(RtiPL) // Load tiPL[AC] into F2
		L.S F3, 4(RclL) // Load clL[C] into F3
		MUL.S F2, F2, F3 // Store tiPL[AC] * clL[C] in F2

		L.S F3, 8(RtiPL) // Load tiPL[AG] into F3
		L.S F4, 8(RclL) // Load clL[G] into F4
		MUL.S F3, F3, F4 // Store tiPL[AG] * clL[G] in F3

		L.S F4, 12(RtiPL) // Load tiPL[AT] into F4
		L.S F5, 12(RclL) // Load clL[T] into F5
		MUL.S F4, F4, F5 // Store tiPL[AT] * clL[T] into F4

		ADD.S F1, F1, F2 
		ADD.S F1, F1, F3
		ADD.S F1, F1, F4 // First half of equation

		L.S F2, 0(RtiPR) // Load tiPR[AA] into F2
		L.S F3, 0(RclR) // Load clR[A] into F3
		MUL.S F2, F2, F3 // Store tiPR[AA] * clR[A] into F2

		L.S F3, 4(RtiPR) // Load tiPR[AC] into F3
		L.S F4, 4(RclR) // Load clR[A] into F4
		MUL.S F3, F3, F4 // Store tiPR[AC] * clR[A] into F3

		L.S F4, 8(RtiPR)
		L.S F5, 8(RclR)
		MUL.S F4, F4, F5

		L.S F5, 12(RtiPR)
		L.S R6, 12(RclR)
		MUL.S F5, F5, F6

		ADD.S F2, F2, F3
		ADD.S F2, F2, F4
		ADD.S F2, F2, F5

		MUL.S F1, F1, F2

		S.S F1, 0(RclP)

		ADDI RclP, RclP, #4

		L.S F1, 16(RtiPL)
		L.S F2, 0(RclL)
		MUL.S F1, F1, F2

		L.S F2, 20(RtiPL)
		L.S F3, 4(RclL)
		MUL.S F2, F2, F3

		L.S F3, 24(RtiPL)
		L.S F4, 8(RclL)
		MUL.S F3, F3, F4

		L.S F4, 28(RtiPL)
		L.S F5, 12(RclL)
		MUL.S F4, F4, F5

		ADD.S F1, F1, F2
		ADD.S F1, F1, F3
		ADD.S F1, F1, F4

		L.S F2, 16(RtiPR)
		L.S F3, 0(RclR)
		MUL.S F2, F2, F3

		L.S F3, 20(RtiPR)
		L.S F4, 4(RclR)
		MUL.S F3, F3, F4

		L.S F4, 24(RtiPR)
		L.S F5, 8(RclR)
		MUL.S F4, F4, F5

		L.S F5, 28(RtiPR)
		L.S F6, 12(RclR)
		MUL.S F5, F5, F6

		ADD.S F2, F2, F3
		ADD.S F2, F2, F4
		ADD.S F2, F2, F5

		MUL.S F1, F1, F2

		S.S F1, 0(RclP)

		ADDI RclP, RclP, #4

		L.S F1, 32(RtiPL)
		L.S F2, 0(RclL)
		MUL.S F1, F1, F2

		L.S F2, 36(RtiPL)
		L.S F3, 4(RclL)
		MUL.S F2, F2, F3

		L.S F3, 40(RtiPL)
		L.S F4, 8(RclL)
		MUL.S F3, F3, F4

		L.S F4, 44(RtiPL)
		L.S F5, 12(RclL)
		MUL.S F4, F4, F5

		ADD.S F1, F1, F2
		ADD.S F1, F1, F3
		ADD.S F1, F1, F4

		L.S F2, 32(RtiPR)
		L.S F3, 0(RclR)
		MUL.S F2, F2, F3

		L.S F3, 36(RtiPR)
		L.S F4, 4(RclR)
		MUL.S F3, F3, F4

		L.S F4, 40(RtiPR)
		L.S F5, 8(RclR)
		MUL.S F4, F4, F5

		L.S F5, 44(RtiPR)
		L.S F6, 12(RclR)
		MUL.S F5, F5, F6

		ADD.S F2, F2, F3
		ADD.S F2, F2, F4
		ADD.S F2, F2, F5

		MUL.S F1, F1, F2

		S.S F1, 0(RclP)

		ADDI RclP, RclP, #4

		L.S F1, 48(RtiPL)
		L.S F2, 0(RclL)
		MUL.S F1, F1, F2

		L.S F2, 52(RtiPL)
		L.S F3, 4(RclL)
		MUL.S F2, F2, F3

		L.S F3, 56(RtiPL)
		L.S F4, 8(RclL)
		MUL.S F3, F3, F4

		L.S F4, 60(RtiPL)
		L.S F5, 12(RclL)
		MUL.S F4, F4, F5

		ADD.S F1, F1, F2
		ADD.S F1, F1, F3
		ADD.S F1, F1, F4

		L.S F2, 48(RtiPR)
		L.S F3, 0(RclR)
		MUL.S F2, F2, F3

		L.S F3, 52(RtiPR)
		L.S F4, 4(RclR)
		MUL.S F3, F3, F4

		L.S F4, 56(RtiPR)
		L.S F5, 8(RclR)
		MUL.S F4, F4, F5

		L.S F5, 60(RtiPR)
		L.S F6, 12(RclR)
		MUL.S F5, F6, F6

		ADD.S F2, F2, F3
		ADD.S F2, F2, F4
		ADD.S F2, F2, F5

		MUL.S F1, F1, F2

		S.S F1, 0(RclP)

		ADDI RclP, RclP, #4

		ADDI RclL, RclL, #16
		ADDI RclR, RclR, #16
		ADDI RtiPL, RtiPL, #16
		ADDI RtiPR, RtiPR, #16
		ADDI R2, R2, #1
		BNE R2, R1, LOOP

4.2: 138 instructions per loop iteration + 2 initialization instructions
     so, with seq_length = 500, the total instructions is 2 + 500(138) = 69,002

VMIPS:

		ADDI VL, R0, #4 // Set the vector length to 4
		ADDI R2, R0, #0 // Initialize k to be 0
LOOP:	LV V1, RtiPL // Load 4 elements of tiPL
		LV V2, RclL // Load 4 elements of clL
		MULVV.S V1, V1, V2 // Multiply tiPL and clL
		SUMR.S F1, V1 // Summation

		LV V2, RtiPR // Load 4 elements of tiPR
		LV V3, RclR // Load 4 elements of clR
		MULVV.S V2, V2, V3 // Multiply tiPR and clR
		SUMR.S F2, V2 // Summation

		MUL.S F1, F1, F2 // Multiply summations

		S.S F1, RclP // Store in clP

		ADDI RclP, RclP, #4 // Increment clP
		ADDI RtiPL, RtiPL, #16 // Increment tiPL by 4
		ADDI RtiPR, RtiPR, #16 // Increment tiPR by 4

		LV V1, RtiPL
		LV V2, RclL
		MULVV.S V1, V1, V2
		SUMR.S F1, V1

		LV V2, RtiPR
		LV V3, RclR
		MULVV.S V2, V2, V3
		SUMR.S F2, V2

		MUL.S F1, F1, F2

		S.S F1, RclP

		ADDI RclP, RclP, #4
		ADDI RtiPL, RtiPL, #16
		ADDI RtiPR, RtiPR, #16

		LV V1, RtiPL
		LV V2, RclL
		MULVV.S V1, V1, V2
		SUMR.S F1, V1

		LV V2, RtiPR
		LV V3, RclR
		MULVV.S V2, V2, V3
		SUMR.S F2, V2

		MUL.S F1, F1, F2

		S.S F1, RclP

		ADDI RclP, RclP, #4
		ADDI RtiPL, RtiPL, #16
		ADDI RtiPR, RtiPR, #16

		LV V1, RtiPL
		LV V2, RclL
		MULVV.S V1, V1, V2
		SUMR.S F1, V1

		LV V2, RtiPR
		LV V3, RclR
		MULVV.S V2, V2, v3
		SUMR.S F2, V2

		MUL.S F1, F1, F2

		S.S F1, RclP

		ADDI RclP, RclP, #4
		ADDI RtiPL, RtiPL, #16
		ADDI RtiPR, RtiPR, #16
		ADDI RclL, RclL, #16
		ADDI RclR, RclR, #16
		ADDI R2, R2, #1
		BNE R2, R1, LOOP

4.2: 56 instructions per loop iteration + 2 initialization instructions
     so, with seq_length = 500, the total instructions is 2 + 500(56) = 28,002